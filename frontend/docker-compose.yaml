services:
  app:
    container_name: frontend
    build:
      context: .
      dockerfile: ./docker/${ENVIRONMENT}/app/Dockerfile
      args:
        PORT: ${PORT}
    environment:
      - INTERNAL_API_URL
      - NEXT_PUBLIC_API_URL
      - AUTH_GOOGLE_ID
      - AUTH_GOOGLE_SECRET
      - AUTH_GITHUB_ID
      - AUTH_GITHUB_SECRET
      - AUTH_SECRET
      - AUTH_URL
    extends:
      file: ./docker/app.yml
      service: ${ENVIRONMENT}
    networks:
      - stack
    ports:
      - ${PORT}:3000
    restart: unless-stopped
    volumes:
      - data_app:/app
      - node_modules:/app/node_modules
      - build:/app/.next
    healthcheck:
      test: curl --fail -s ${INTERNAL_API_URL}/api/status || exit 1
      interval: 60s
      timeout: 10s
      start_period: 30s
      retries: 4
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --webroot -w /var/www/certbot --quiet; sleep 12h & wait $${!}; done'"
    networks:
      - stack

  nginx:
    container_name: nginx
    build: 
      context: ./docker/nginx
    environment:
      - PORT
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    links:
      - app
    ports:
      - 80:80
      - 443:443
    restart: always
    networks:
      - stack
  
volumes:
  data_app:
    name: ${DATA_APP}
    external: true
  node_modules:
  build:

networks:
  stack:
    external: true
    name: ${APP_NAME}_network